// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_request_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_request_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_request_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_request_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_request_2eproto;
namespace ynet {
class AnswerResults;
class AnswerResultsDefaultTypeInternal;
extern AnswerResultsDefaultTypeInternal _AnswerResults_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class QueryResults;
class QueryResultsDefaultTypeInternal;
extern QueryResultsDefaultTypeInternal _QueryResults_default_instance_;
}  // namespace ynet
PROTOBUF_NAMESPACE_OPEN
template<> ::ynet::AnswerResults* Arena::CreateMaybeMessage<::ynet::AnswerResults>(Arena*);
template<> ::ynet::Empty* Arena::CreateMaybeMessage<::ynet::Empty>(Arena*);
template<> ::ynet::QueryResults* Arena::CreateMaybeMessage<::ynet::QueryResults>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ynet {

// ===================================================================

class QueryResults :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ynet.QueryResults) */ {
 public:
  QueryResults();
  virtual ~QueryResults();

  QueryResults(const QueryResults& from);
  QueryResults(QueryResults&& from) noexcept
    : QueryResults() {
    *this = ::std::move(from);
  }

  inline QueryResults& operator=(const QueryResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryResults& operator=(QueryResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryResults* internal_default_instance() {
    return reinterpret_cast<const QueryResults*>(
               &_QueryResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QueryResults& a, QueryResults& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryResults* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryResults* New() const final {
    return CreateMaybeMessage<QueryResults>(nullptr);
  }

  QueryResults* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryResults>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryResults& from);
  void MergeFrom(const QueryResults& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryResults* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ynet.QueryResults";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_request_2eproto);
    return ::descriptor_table_request_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQueryFieldNumber = 16,
    kPageNumberFieldNumber = 17,
    kResultPerPageFieldNumber = 18,
  };
  // string query = 16;
  void clear_query();
  const std::string& query() const;
  void set_query(const std::string& value);
  void set_query(std::string&& value);
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  std::string* mutable_query();
  std::string* release_query();
  void set_allocated_query(std::string* query);
  private:
  const std::string& _internal_query() const;
  void _internal_set_query(const std::string& value);
  std::string* _internal_mutable_query();
  public:

  // int32 page_number = 17;
  void clear_page_number();
  ::PROTOBUF_NAMESPACE_ID::int32 page_number() const;
  void set_page_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page_number() const;
  void _internal_set_page_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 result_per_page = 18;
  void clear_result_per_page();
  ::PROTOBUF_NAMESPACE_ID::int32 result_per_page() const;
  void set_result_per_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result_per_page() const;
  void _internal_set_result_per_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ynet.QueryResults)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr query_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_number_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_per_page_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_request_2eproto;
};
// -------------------------------------------------------------------

class AnswerResults :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ynet.AnswerResults) */ {
 public:
  AnswerResults();
  virtual ~AnswerResults();

  AnswerResults(const AnswerResults& from);
  AnswerResults(AnswerResults&& from) noexcept
    : AnswerResults() {
    *this = ::std::move(from);
  }

  inline AnswerResults& operator=(const AnswerResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnswerResults& operator=(AnswerResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AnswerResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnswerResults* internal_default_instance() {
    return reinterpret_cast<const AnswerResults*>(
               &_AnswerResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AnswerResults& a, AnswerResults& b) {
    a.Swap(&b);
  }
  inline void Swap(AnswerResults* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnswerResults* New() const final {
    return CreateMaybeMessage<AnswerResults>(nullptr);
  }

  AnswerResults* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnswerResults>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AnswerResults& from);
  void MergeFrom(const AnswerResults& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnswerResults* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ynet.AnswerResults";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_request_2eproto);
    return ::descriptor_table_request_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataValueFieldNumber = 17,
    kPageNumberFieldNumber = 16,
  };
  // repeated string dataValue = 17;
  int datavalue_size() const;
  private:
  int _internal_datavalue_size() const;
  public:
  void clear_datavalue();
  const std::string& datavalue(int index) const;
  std::string* mutable_datavalue(int index);
  void set_datavalue(int index, const std::string& value);
  void set_datavalue(int index, std::string&& value);
  void set_datavalue(int index, const char* value);
  void set_datavalue(int index, const char* value, size_t size);
  std::string* add_datavalue();
  void add_datavalue(const std::string& value);
  void add_datavalue(std::string&& value);
  void add_datavalue(const char* value);
  void add_datavalue(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& datavalue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_datavalue();
  private:
  const std::string& _internal_datavalue(int index) const;
  std::string* _internal_add_datavalue();
  public:

  // int32 page_number = 16;
  void clear_page_number();
  ::PROTOBUF_NAMESPACE_ID::int32 page_number() const;
  void set_page_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page_number() const;
  void _internal_set_page_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ynet.AnswerResults)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> datavalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_request_2eproto;
};
// -------------------------------------------------------------------

class Empty :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ynet.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(Empty* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const final {
    return CreateMaybeMessage<Empty>(nullptr);
  }

  Empty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Empty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ynet.Empty";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_request_2eproto);
    return ::descriptor_table_request_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ynet.Empty)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_request_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QueryResults

// string query = 16;
inline void QueryResults::clear_query() {
  query_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& QueryResults::query() const {
  // @@protoc_insertion_point(field_get:ynet.QueryResults.query)
  return _internal_query();
}
inline void QueryResults::set_query(const std::string& value) {
  _internal_set_query(value);
  // @@protoc_insertion_point(field_set:ynet.QueryResults.query)
}
inline std::string* QueryResults::mutable_query() {
  // @@protoc_insertion_point(field_mutable:ynet.QueryResults.query)
  return _internal_mutable_query();
}
inline const std::string& QueryResults::_internal_query() const {
  return query_.GetNoArena();
}
inline void QueryResults::_internal_set_query(const std::string& value) {
  
  query_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void QueryResults::set_query(std::string&& value) {
  
  query_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ynet.QueryResults.query)
}
inline void QueryResults::set_query(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  query_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ynet.QueryResults.query)
}
inline void QueryResults::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ynet.QueryResults.query)
}
inline std::string* QueryResults::_internal_mutable_query() {
  
  return query_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* QueryResults::release_query() {
  // @@protoc_insertion_point(field_release:ynet.QueryResults.query)
  
  return query_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void QueryResults::set_allocated_query(std::string* query) {
  if (query != nullptr) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:ynet.QueryResults.query)
}

// int32 page_number = 17;
inline void QueryResults::clear_page_number() {
  page_number_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 QueryResults::_internal_page_number() const {
  return page_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 QueryResults::page_number() const {
  // @@protoc_insertion_point(field_get:ynet.QueryResults.page_number)
  return _internal_page_number();
}
inline void QueryResults::_internal_set_page_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_number_ = value;
}
inline void QueryResults::set_page_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page_number(value);
  // @@protoc_insertion_point(field_set:ynet.QueryResults.page_number)
}

// int32 result_per_page = 18;
inline void QueryResults::clear_result_per_page() {
  result_per_page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 QueryResults::_internal_result_per_page() const {
  return result_per_page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 QueryResults::result_per_page() const {
  // @@protoc_insertion_point(field_get:ynet.QueryResults.result_per_page)
  return _internal_result_per_page();
}
inline void QueryResults::_internal_set_result_per_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  result_per_page_ = value;
}
inline void QueryResults::set_result_per_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result_per_page(value);
  // @@protoc_insertion_point(field_set:ynet.QueryResults.result_per_page)
}

// -------------------------------------------------------------------

// AnswerResults

// int32 page_number = 16;
inline void AnswerResults::clear_page_number() {
  page_number_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AnswerResults::_internal_page_number() const {
  return page_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AnswerResults::page_number() const {
  // @@protoc_insertion_point(field_get:ynet.AnswerResults.page_number)
  return _internal_page_number();
}
inline void AnswerResults::_internal_set_page_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_number_ = value;
}
inline void AnswerResults::set_page_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page_number(value);
  // @@protoc_insertion_point(field_set:ynet.AnswerResults.page_number)
}

// repeated string dataValue = 17;
inline int AnswerResults::_internal_datavalue_size() const {
  return datavalue_.size();
}
inline int AnswerResults::datavalue_size() const {
  return _internal_datavalue_size();
}
inline void AnswerResults::clear_datavalue() {
  datavalue_.Clear();
}
inline std::string* AnswerResults::add_datavalue() {
  // @@protoc_insertion_point(field_add_mutable:ynet.AnswerResults.dataValue)
  return _internal_add_datavalue();
}
inline const std::string& AnswerResults::_internal_datavalue(int index) const {
  return datavalue_.Get(index);
}
inline const std::string& AnswerResults::datavalue(int index) const {
  // @@protoc_insertion_point(field_get:ynet.AnswerResults.dataValue)
  return _internal_datavalue(index);
}
inline std::string* AnswerResults::mutable_datavalue(int index) {
  // @@protoc_insertion_point(field_mutable:ynet.AnswerResults.dataValue)
  return datavalue_.Mutable(index);
}
inline void AnswerResults::set_datavalue(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:ynet.AnswerResults.dataValue)
  datavalue_.Mutable(index)->assign(value);
}
inline void AnswerResults::set_datavalue(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:ynet.AnswerResults.dataValue)
  datavalue_.Mutable(index)->assign(std::move(value));
}
inline void AnswerResults::set_datavalue(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  datavalue_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ynet.AnswerResults.dataValue)
}
inline void AnswerResults::set_datavalue(int index, const char* value, size_t size) {
  datavalue_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ynet.AnswerResults.dataValue)
}
inline std::string* AnswerResults::_internal_add_datavalue() {
  return datavalue_.Add();
}
inline void AnswerResults::add_datavalue(const std::string& value) {
  datavalue_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ynet.AnswerResults.dataValue)
}
inline void AnswerResults::add_datavalue(std::string&& value) {
  datavalue_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ynet.AnswerResults.dataValue)
}
inline void AnswerResults::add_datavalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  datavalue_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ynet.AnswerResults.dataValue)
}
inline void AnswerResults::add_datavalue(const char* value, size_t size) {
  datavalue_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ynet.AnswerResults.dataValue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
AnswerResults::datavalue() const {
  // @@protoc_insertion_point(field_list:ynet.AnswerResults.dataValue)
  return datavalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
AnswerResults::mutable_datavalue() {
  // @@protoc_insertion_point(field_mutable_list:ynet.AnswerResults.dataValue)
  return &datavalue_;
}

// -------------------------------------------------------------------

// Empty

// int32 id = 1;
inline void Empty::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Empty::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Empty::id() const {
  // @@protoc_insertion_point(field_get:ynet.Empty.id)
  return _internal_id();
}
inline void Empty::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void Empty::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ynet.Empty.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ynet

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_request_2eproto
